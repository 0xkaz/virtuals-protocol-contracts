{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x99FF45d588350a4E1654D307e617a37674eBE55A",
      "txHash": "0xe156cd0edd89afcb0e1ac5f05c0de4340e55315fb405e6122e075187c45114bc",
      "kind": "transparent"
    },
    {
      "address": "0xD95086230a571858B891666BdC2847206413E3Fe",
      "txHash": "0xe7bbfc37d99c59a907ff98640ecf4b520e13dfba6307998fbce6188825b1fcb0",
      "kind": "transparent"
    },
    {
      "address": "0xaB7E35be1Fc587B7c1Bf3AC4128eFa1B8BE8A2A6",
      "txHash": "0x6d9fd952e587eadc1ae6a1d3ea26cae9423f92276ddb9cd5d29784fb1941503b",
      "kind": "transparent"
    },
    {
      "address": "0x18C9d5764a9397f12575b55d689BAf1879441e26",
      "txHash": "0x9d8fb45bdd5a3e61412a6f07f4cb99416fa1086a672b644c63e4b63e8d09befb",
      "kind": "transparent"
    },
    {
      "address": "0x896A4d13F53e27c2e094b73deD9073bC68fA9176",
      "txHash": "0x95ef8416fc21daf308ee9b1dd89124f5ed45d8902aa6493f1880001d32f15ebd",
      "kind": "transparent"
    },
    {
      "address": "0x99A21Dd41a5Bf0a126f9B1a0B8AE2358afC24343",
      "txHash": "0x327a0c0a4c24dd130bf8708f086bf8cc1b702aa52e099d7c40808cddf9997aea",
      "kind": "transparent"
    },
    {
      "address": "0xb92e3A6030CAF4633375a761cA384B3E6B99E4b6",
      "txHash": "0xe9e3d708f7eff4b9c1643f46c8924910835cffba33a7de3d9fd8030f65103259",
      "kind": "transparent"
    },
    {
      "address": "0xd34C7C9AD8CD9FF30B60A86327AEEAeF01c370fc",
      "txHash": "0xc1b72f7e382bea1d29fb26c2773e27d6219f12ed86ae2aebf079fa6709346cc9",
      "kind": "transparent"
    },
    {
      "address": "0x31B8E40cf20bF91234219929381609224bDCB4B9",
      "txHash": "0x4da3c77f54ab329487e2d592f26f45ed2d24890dddd3810a1997da8b7eae59fe",
      "kind": "transparent"
    },
    {
      "address": "0x38409180BDBA41F20ef832f15b29600928C8d2E1",
      "txHash": "0x8e8e81b7ef29c71d8c6e89d239a0e38daa711a35c400662072998560d304446b",
      "kind": "transparent"
    },
    {
      "address": "0xbc8690A9F0e83dA0Dee010087183a49b5407a7D6",
      "txHash": "0x40001a13564d2fa68aeac34867bb8f113736d00b0c7705bbcf04826b4a7c1793",
      "kind": "transparent"
    },
    {
      "address": "0xa0E8179f79C141D96AA73267cffe3c15f2Ac9751",
      "txHash": "0x211da39f24cc28c92cf2e89f83ea198927ffe431ea624e98d4bf7ff19a58c440",
      "kind": "transparent"
    },
    {
      "address": "0xC580b9E34444286C1c2Cc123BD71f651da392a0b",
      "txHash": "0x7968b89193f71d970c62d0b29456f8747f15b45d07bf0ef3cc0ccf5e3a379458",
      "kind": "transparent"
    },
    {
      "address": "0xC2a2fa1252B98993002d5A291Ab7d7F8A910aEb8",
      "txHash": "0x4d45bbdfffe34e6dabcc6dcdb7295b45004dc8e1ad18b3b0117c21113be3e6aa",
      "kind": "transparent"
    },
    {
      "address": "0x756C50FF360f0e1061Ca7A3e9125e4c3027C3cDD",
      "txHash": "0xcbca45d84aac5dc7381eb8695f19d803547fed46af7f135668ef653118bdad71",
      "kind": "transparent"
    },
    {
      "address": "0xa598E14c8322454fA6521da922F90d7843bD6d23",
      "txHash": "0xde798ede956e024727efac003a7b6c6819dbae7b709b30e45c6d6a9054537d0f",
      "kind": "transparent"
    },
    {
      "address": "0xe4C8104bfB7a4D08b342e79d1863d36060363E0a",
      "txHash": "0x37c38287f5df8f643833e09af3c533fb1a1c1d4deb15557bd6f852414be9f141",
      "kind": "transparent"
    },
    {
      "address": "0xAa9c0106E227a24c5479AE5Bfc7EEDb5848a8592",
      "txHash": "0xc642fec993767ceefa6e7d917e9ca130b502bc1c4c88669b062a5acf1924f827",
      "kind": "transparent"
    },
    {
      "address": "0xa6e9e3C4990f088C947d91AD105c6e6675cba52F",
      "txHash": "0x0ea937b92755275001f7a5b629c25ab4a99d54f3ba85ed739b58887ead7439d6",
      "kind": "transparent"
    },
    {
      "address": "0x7C1F4f1f968d2926F48E02A7eF380Ad3b51B257a",
      "txHash": "0x7e48805b954218c3e3c227acf6fda0584cfe802f86e44bddb41677627462bdf5",
      "kind": "transparent"
    },
    {
      "address": "0xb997e2f88B187Cd5132c5804F5c800d40f85a16B",
      "txHash": "0xd17f5d2714193a972656e1b000e37740819e8a60bb717cb1c1feba39e5a5b935",
      "kind": "transparent"
    }
  ],
  "impls": {
    "90457fb4addf15a578e84f4d8ec55e99f46f42da34b87c1ac48462f791f0a4f4": {
      "address": "0xFC682a09E452551e581Cb3BD728461FCF2e9F842",
      "txHash": "0x3d035e1893e30d543ffb1cdfb1ffdd1d313a8628811911b4aee945b5afdc4162",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "coreTypes",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "CoreRegistry",
            "src": "contracts/virtualPersona/CoreRegistry.sol:7"
          },
          {
            "label": "_nextCoreType",
            "offset": 0,
            "slot": "1",
            "type": "t_uint8",
            "contract": "CoreRegistry",
            "src": "contracts/virtualPersona/CoreRegistry.sol:8"
          },
          {
            "label": "_validatorsMap",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:8"
          },
          {
            "label": "_baseValidatorScore",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:10"
          },
          {
            "label": "_validators",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:12"
          },
          {
            "label": "_getScoreOf",
            "offset": 0,
            "slot": "5",
            "type": "t_function_internal_view(t_uint256,t_address)returns(t_uint256)",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:14"
          },
          {
            "label": "_getMaxScore",
            "offset": 8,
            "slot": "5",
            "type": "t_function_internal_view(t_uint256)returns(t_uint256)",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:15"
          },
          {
            "label": "_getPastScore",
            "offset": 16,
            "slot": "5",
            "type": "t_function_internal_view(t_uint256,t_address,t_uint256)returns(t_uint256)",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:16"
          },
          {
            "label": "_nextVirtualId",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:27"
          },
          {
            "label": "_stakingTokenToVirtualId",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:28"
          },
          {
            "label": "virtualInfos",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_struct(VirtualInfo)26881_storage)",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:47"
          },
          {
            "label": "_contributionNft",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:49"
          },
          {
            "label": "_serviceNft",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)984_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)1206_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)744_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_function_internal_view(t_uint256)returns(t_uint256)": {
            "label": "function (uint256) view returns (uint256)",
            "numberOfBytes": "8"
          },
          "t_function_internal_view(t_uint256,t_address)returns(t_uint256)": {
            "label": "function (uint256,address) view returns (uint256)",
            "numberOfBytes": "8"
          },
          "t_function_internal_view(t_uint256,t_address,t_uint256)returns(t_uint256)": {
            "label": "function (uint256,address,uint256) view returns (uint256)",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VirtualInfo)26881_storage)": {
            "label": "mapping(uint256 => struct IAgentNft.VirtualInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_struct(VirtualInfo)26881_storage": {
            "label": "struct IAgentNft.VirtualInfo",
            "members": [
              {
                "label": "dao",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "founder",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tba",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "coreTypes",
                "type": "t_array(t_uint8)dyn_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7bbe66e160f96c24a5149a72b02525d4f11766e15d4fe729c70078b2233c4f8d": {
      "address": "0xCC244806D05dfE6634215168657D5e4a945314Ff",
      "txHash": "0x077c6f532b5eb9650f2af0897533ee796b9de93c099d538b3df3f72bafcc42be",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "personaNft",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:22"
          },
          {
            "label": "_contributionVirtualId",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:24"
          },
          {
            "label": "_parents",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:25"
          },
          {
            "label": "_children",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:26"
          },
          {
            "label": "_cores",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint8)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:27"
          },
          {
            "label": "modelContributions",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:29"
          },
          {
            "label": "modelDatasets",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:30"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)1129_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)984_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)1206_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)744_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "27879f3f01f7a3acc9fd3be0488494641da87f7d90bc16e8f0453d6f6061265d": {
      "address": "0x64DE451c07bC42e22e51Df6Ee3B9BeDC9b41602D",
      "txHash": "0x01b40fe378d5d3800e1aafe694d7304128882a77625bc77ff9d57bf118a2efc0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:25"
          },
          {
            "label": "personaNft",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:27"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:28"
          },
          {
            "label": "datasetImpactWeight",
            "offset": 20,
            "slot": "2",
            "type": "t_uint16",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:30"
          },
          {
            "label": "_cores",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint8)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:32"
          },
          {
            "label": "_maturities",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:33"
          },
          {
            "label": "_impacts",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:34"
          },
          {
            "label": "_mintedAts",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:35"
          },
          {
            "label": "_coreServices",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:37"
          },
          {
            "label": "_coreDatasets",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_array(t_uint256)dyn_storage))",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)307_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)384_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_mapping(t_uint8,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint8 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9c1308ba7677eecd51bc59b6b12537385c4e80740b28e5e83e2d589c69746b9f": {
      "address": "0xfa35ab6144b61DCC9E680Af10fe896cb26872c5a",
      "txHash": "0x807bcdd9786bb7eb31b14a184c98405f9dae1de31e04da4e12885d6826f992f0",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_roles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)275_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:17"
          },
          {
            "label": "tokenImplementation",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:18"
          },
          {
            "label": "daoImplementation",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:19"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:20"
          },
          {
            "label": "tbaRegistry",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:21"
          },
          {
            "label": "applicationThreshold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:22"
          },
          {
            "label": "allTokens",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:24"
          },
          {
            "label": "allDAOs",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:25"
          },
          {
            "label": "assetToken",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:27"
          },
          {
            "label": "maturityDuration",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:28"
          },
          {
            "label": "_applications",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(Application)1694_storage)",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:62"
          },
          {
            "label": "gov",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:64"
          },
          {
            "label": "_vault",
            "offset": 0,
            "slot": "13",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:75"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ApplicationStatus)1665": {
            "label": "enum AgentFactory.ApplicationStatus",
            "members": [
              "Active",
              "Executed",
              "Withdrawn"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)275_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Application)1694_storage)": {
            "label": "mapping(uint256 => struct AgentFactory.Application)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Application)1694_storage": {
            "label": "struct AgentFactory.Application",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(ApplicationStatus)1665",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "withdrawableAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cores",
                "type": "t_array(t_uint8)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "proposalEndBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "virtualId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "tbaSalt",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tbaImplementation",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "daoVotingPeriod",
                "type": "t_uint32",
                "offset": 20,
                "slot": "10"
              },
              {
                "label": "daoThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(RoleData)275_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f4771a71d8d7f898aad24579478ca6060fbada8bba9fc6a178052f5925565387": {
      "address": "0xaA7704ECd5d6c5E0260c4D4e4C1e1AbBe14b2860",
      "txHash": "0xa7fb2cd34d62e6b950fd2cf4318fc9807a792e064f8b728c842f6d905228d106",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_roles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)275_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_nextRewardId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint48",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:24"
          },
          {
            "label": "rewardToken",
            "offset": 6,
            "slot": "1",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:30"
          },
          {
            "label": "agentNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:31"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:32"
          },
          {
            "label": "serviceNft",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:33"
          },
          {
            "label": "_mainRewards",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(MainReward)6281_storage)dyn_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:36"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_array(t_struct(Reward)6294_storage)dyn_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:37"
          },
          {
            "label": "_rewardSettings",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Trace)6566_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:39"
          },
          {
            "label": "protocolRewards",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:42"
          },
          {
            "label": "validatorPoolRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:43"
          },
          {
            "label": "_claimedStakerRewards",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6299_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:44"
          },
          {
            "label": "_claimedValidatorRewards",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6299_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:46"
          },
          {
            "label": "_serviceRewards",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(ServiceReward)6310_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:48"
          },
          {
            "label": "_rewardImpacts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:49"
          },
          {
            "label": "_validatorRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint48,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:51"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)6583_storage)dyn_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MainReward)6281_storage)dyn_storage": {
            "label": "struct IAgentReward.MainReward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reward)6294_storage)dyn_storage": {
            "label": "struct IAgentReward.Reward[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6299_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IAgentReward.Claim))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint48,t_uint256))": {
            "label": "mapping(address => mapping(uint48 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)275_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reward)6294_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Reward[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Claim)6299_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Claim)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ServiceReward)6310_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.ServiceReward)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint48 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_uint256)": {
            "label": "mapping(uint48 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)6583_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_struct(RewardSettings)6577_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Claim)6299_storage": {
            "label": "struct IAgentReward.Claim",
            "members": [
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MainReward)6281_storage": {
            "label": "struct IAgentReward.MainReward",
            "members": [
              {
                "label": "blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Reward)6294_storage": {
            "label": "struct IAgentReward.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mainIndex",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contributorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "coreAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RewardSettings)6577_storage": {
            "label": "struct RewardSettingsCheckpoints.RewardSettings",
            "members": [
              {
                "label": "protocolShares",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contributorShares",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "stakerShares",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "parentShares",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "stakeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)275_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ServiceReward)6310_storage": {
            "label": "struct IAgentReward.ServiceReward",
            "members": [
              {
                "label": "impact",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "parentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalClaimedParent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Trace)6566_storage": {
            "label": "struct RewardSettingsCheckpoints.Trace",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)6583_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5a718e3cb289ae3a2cdde94e4ef6a54f7b17a1e2e4ee8415d3adaa9387448fd7": {
      "address": "0x4648400a4328016DE755A5d94f504cFC82d23651",
      "txHash": "0x4d190c9af782e67be0077346e080acbba648e7e2ce97b666d3aa67bbac9e373d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "coreTypes",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint8,t_string_storage)",
            "contract": "CoreRegistry",
            "src": "contracts/virtualPersona/CoreRegistry.sol:7"
          },
          {
            "label": "_nextCoreType",
            "offset": 0,
            "slot": "1",
            "type": "t_uint8",
            "contract": "CoreRegistry",
            "src": "contracts/virtualPersona/CoreRegistry.sol:8"
          },
          {
            "label": "_validatorsMap",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:8"
          },
          {
            "label": "_baseValidatorScore",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:10"
          },
          {
            "label": "_validators",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:12"
          },
          {
            "label": "_getScoreOf",
            "offset": 0,
            "slot": "5",
            "type": "t_function_internal_view(t_uint256,t_address)returns(t_uint256)",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:14"
          },
          {
            "label": "_getMaxScore",
            "offset": 8,
            "slot": "5",
            "type": "t_function_internal_view(t_uint256)returns(t_uint256)",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:15"
          },
          {
            "label": "_getPastScore",
            "offset": 16,
            "slot": "5",
            "type": "t_function_internal_view(t_uint256,t_address,t_uint256)returns(t_uint256)",
            "contract": "ValidatorRegistry",
            "src": "contracts/virtualPersona/ValidatorRegistry.sol:16"
          },
          {
            "label": "_nextVirtualId",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:27"
          },
          {
            "label": "_stakingTokenToVirtualId",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:28"
          },
          {
            "label": "virtualInfos",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_struct(VirtualInfo)11161_storage)",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:47"
          },
          {
            "label": "_contributionNft",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:49"
          },
          {
            "label": "_serviceNft",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "AgentNft",
            "src": "contracts/virtualPersona/AgentNft.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)191_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)329_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_function_internal_view(t_uint256)returns(t_uint256)": {
            "label": "function (uint256) view returns (uint256)",
            "numberOfBytes": "8"
          },
          "t_function_internal_view(t_uint256,t_address)returns(t_uint256)": {
            "label": "function (uint256,address) view returns (uint256)",
            "numberOfBytes": "8"
          },
          "t_function_internal_view(t_uint256,t_address,t_uint256)returns(t_uint256)": {
            "label": "function (uint256,address,uint256) view returns (uint256)",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VirtualInfo)11161_storage)": {
            "label": "mapping(uint256 => struct IAgentNft.VirtualInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_string_storage)": {
            "label": "mapping(uint8 => string)",
            "numberOfBytes": "32"
          },
          "t_struct(VirtualInfo)11161_storage": {
            "label": "struct IAgentNft.VirtualInfo",
            "members": [
              {
                "label": "dao",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "founder",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tba",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "coreTypes",
                "type": "t_array(t_uint8)dyn_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5fb009fb382bcb5499b5b83ddfbbb16642e68060502fb96475d6108d73fb048d": {
      "address": "0x9098a6E9d73A4BBFe4926454FA14E383c11ab1C0",
      "txHash": "0xddfb806f3516617ebb0fd7114500e066b9c2b158a05a102657337679d4a4c804",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_roles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)275_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_nextRewardId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint48",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:24"
          },
          {
            "label": "rewardToken",
            "offset": 6,
            "slot": "1",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:30"
          },
          {
            "label": "agentNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:31"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:32"
          },
          {
            "label": "serviceNft",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:33"
          },
          {
            "label": "_mainRewards",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(MainReward)6310_storage)dyn_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:36"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_array(t_struct(Reward)6323_storage)dyn_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:37"
          },
          {
            "label": "_rewardSettings",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Trace)6595_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:39"
          },
          {
            "label": "protocolRewards",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:42"
          },
          {
            "label": "validatorPoolRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:43"
          },
          {
            "label": "_claimedStakerRewards",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:44"
          },
          {
            "label": "_claimedValidatorRewards",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:46"
          },
          {
            "label": "_serviceRewards",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(ServiceReward)6339_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:48"
          },
          {
            "label": "_rewardImpacts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:49"
          },
          {
            "label": "_validatorRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint48,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:51"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "15",
            "type": "t_bool",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:61"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)6612_storage)dyn_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MainReward)6310_storage)dyn_storage": {
            "label": "struct IAgentReward.MainReward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reward)6323_storage)dyn_storage": {
            "label": "struct IAgentReward.Reward[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IAgentReward.Claim))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint48,t_uint256))": {
            "label": "mapping(address => mapping(uint48 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)275_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reward)6323_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Reward[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Claim)6328_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Claim)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ServiceReward)6339_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.ServiceReward)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint48 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_uint256)": {
            "label": "mapping(uint48 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)6612_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_struct(RewardSettings)6606_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Claim)6328_storage": {
            "label": "struct IAgentReward.Claim",
            "members": [
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MainReward)6310_storage": {
            "label": "struct IAgentReward.MainReward",
            "members": [
              {
                "label": "blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Reward)6323_storage": {
            "label": "struct IAgentReward.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mainIndex",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contributorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "coreAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RewardSettings)6606_storage": {
            "label": "struct RewardSettingsCheckpoints.RewardSettings",
            "members": [
              {
                "label": "protocolShares",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contributorShares",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "stakerShares",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "parentShares",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "stakeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)275_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ServiceReward)6339_storage": {
            "label": "struct IAgentReward.ServiceReward",
            "members": [
              {
                "label": "impact",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "parentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalClaimedParent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Trace)6595_storage": {
            "label": "struct RewardSettingsCheckpoints.Trace",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)6612_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "deb52aab685aae960b9656e9dd06dfa405e455f5cab1504c11019f747deb29fa": {
      "address": "0x2cbaFd6AbCD6350A59Dbb2c37C5C2FEA7A5186A8",
      "txHash": "0x70e75939364f98a3d3bdddbcebdbe5a56e2d4507b97f46b2733a703e339e3dcb",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_roles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)275_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_nextRewardId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint48",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:24"
          },
          {
            "label": "rewardToken",
            "offset": 6,
            "slot": "1",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:30"
          },
          {
            "label": "agentNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:31"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:32"
          },
          {
            "label": "serviceNft",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:33"
          },
          {
            "label": "_mainRewards",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(MainReward)6326_storage)dyn_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:36"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_array(t_struct(Reward)6339_storage)dyn_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:37"
          },
          {
            "label": "_rewardSettings",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Trace)6611_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:39"
          },
          {
            "label": "protocolRewards",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:42"
          },
          {
            "label": "validatorPoolRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:43"
          },
          {
            "label": "_claimedStakerRewards",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6344_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:44"
          },
          {
            "label": "_claimedValidatorRewards",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6344_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:46"
          },
          {
            "label": "_serviceRewards",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(ServiceReward)6355_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:48"
          },
          {
            "label": "_rewardImpacts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:49"
          },
          {
            "label": "_validatorRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint48,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:51"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "15",
            "type": "t_bool",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:61"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)6628_storage)dyn_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MainReward)6326_storage)dyn_storage": {
            "label": "struct IAgentReward.MainReward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reward)6339_storage)dyn_storage": {
            "label": "struct IAgentReward.Reward[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6344_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IAgentReward.Claim))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint48,t_uint256))": {
            "label": "mapping(address => mapping(uint48 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)275_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reward)6339_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Reward[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Claim)6344_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Claim)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ServiceReward)6355_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.ServiceReward)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint48 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_uint256)": {
            "label": "mapping(uint48 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)6628_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_struct(RewardSettings)6622_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Claim)6344_storage": {
            "label": "struct IAgentReward.Claim",
            "members": [
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MainReward)6326_storage": {
            "label": "struct IAgentReward.MainReward",
            "members": [
              {
                "label": "blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Reward)6339_storage": {
            "label": "struct IAgentReward.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mainIndex",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contributorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "coreAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RewardSettings)6622_storage": {
            "label": "struct RewardSettingsCheckpoints.RewardSettings",
            "members": [
              {
                "label": "protocolShares",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contributorShares",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "stakerShares",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "parentShares",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "stakeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)275_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ServiceReward)6355_storage": {
            "label": "struct IAgentReward.ServiceReward",
            "members": [
              {
                "label": "impact",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "parentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalClaimedParent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Trace)6611_storage": {
            "label": "struct RewardSettingsCheckpoints.Trace",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)6628_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c2ae40285587853a6efc4aedab13992e865be9f29db6d7a8630aa573186f9d4c": {
      "address": "0xa41aB9cCe7A3920510800e45BeDdC7692a32c46A",
      "txHash": "0xcf64c4a4d788ffe914c76e123ba4fcd598251421d179218a8cdd8e5b67b587b3",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_roles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)275_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_nextRewardId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint48",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:24"
          },
          {
            "label": "rewardToken",
            "offset": 6,
            "slot": "1",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:30"
          },
          {
            "label": "agentNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:31"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:32"
          },
          {
            "label": "serviceNft",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:33"
          },
          {
            "label": "_mainRewards",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(MainReward)6326_storage)dyn_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:36"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_array(t_struct(Reward)6339_storage)dyn_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:37"
          },
          {
            "label": "_rewardSettings",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Trace)6611_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:39"
          },
          {
            "label": "protocolRewards",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:42"
          },
          {
            "label": "validatorPoolRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:43"
          },
          {
            "label": "_claimedStakerRewards",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6344_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:44"
          },
          {
            "label": "_claimedValidatorRewards",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6344_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:46"
          },
          {
            "label": "_serviceRewards",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(ServiceReward)6355_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:48"
          },
          {
            "label": "_rewardImpacts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:49"
          },
          {
            "label": "_validatorRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint48,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:51"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "15",
            "type": "t_bool",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:61"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)6628_storage)dyn_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MainReward)6326_storage)dyn_storage": {
            "label": "struct IAgentReward.MainReward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reward)6339_storage)dyn_storage": {
            "label": "struct IAgentReward.Reward[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6344_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IAgentReward.Claim))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint48,t_uint256))": {
            "label": "mapping(address => mapping(uint48 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)275_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reward)6339_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Reward[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Claim)6344_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Claim)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ServiceReward)6355_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.ServiceReward)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint48 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_uint256)": {
            "label": "mapping(uint48 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)6628_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_struct(RewardSettings)6622_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Claim)6344_storage": {
            "label": "struct IAgentReward.Claim",
            "members": [
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MainReward)6326_storage": {
            "label": "struct IAgentReward.MainReward",
            "members": [
              {
                "label": "blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Reward)6339_storage": {
            "label": "struct IAgentReward.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mainIndex",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contributorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "coreAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RewardSettings)6622_storage": {
            "label": "struct RewardSettingsCheckpoints.RewardSettings",
            "members": [
              {
                "label": "protocolShares",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contributorShares",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "stakerShares",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "parentShares",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "stakeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)275_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ServiceReward)6355_storage": {
            "label": "struct IAgentReward.ServiceReward",
            "members": [
              {
                "label": "impact",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "parentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalClaimedParent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Trace)6611_storage": {
            "label": "struct RewardSettingsCheckpoints.Trace",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)6628_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c98279e66ae0a23b7d02a38f8cc1bc53bc38d52c9d437de90eca447f4af36d54": {
      "address": "0x17ae73154c66ac29b2B1A7804F6861866Ad206E8",
      "txHash": "0x538633ae6295721b36e2e1deda93bbe0048db3abad25dd096deeaf7a568a5572",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_roles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)275_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_nextRewardId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint48",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:24"
          },
          {
            "label": "rewardToken",
            "offset": 6,
            "slot": "1",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:30"
          },
          {
            "label": "agentNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:31"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:32"
          },
          {
            "label": "serviceNft",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:33"
          },
          {
            "label": "_mainRewards",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(MainReward)6310_storage)dyn_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:36"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_array(t_struct(Reward)6323_storage)dyn_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:37"
          },
          {
            "label": "_rewardSettings",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Trace)6595_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:39"
          },
          {
            "label": "protocolRewards",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:42"
          },
          {
            "label": "validatorPoolRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:43"
          },
          {
            "label": "_claimedStakerRewards",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:44"
          },
          {
            "label": "_claimedValidatorRewards",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:46"
          },
          {
            "label": "_serviceRewards",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(ServiceReward)6339_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:48"
          },
          {
            "label": "_rewardImpacts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:49"
          },
          {
            "label": "_validatorRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint48,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:51"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "15",
            "type": "t_bool",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:61"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)6612_storage)dyn_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MainReward)6310_storage)dyn_storage": {
            "label": "struct IAgentReward.MainReward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reward)6323_storage)dyn_storage": {
            "label": "struct IAgentReward.Reward[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IAgentReward.Claim))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint48,t_uint256))": {
            "label": "mapping(address => mapping(uint48 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)275_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reward)6323_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Reward[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Claim)6328_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Claim)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ServiceReward)6339_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.ServiceReward)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint48 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_uint256)": {
            "label": "mapping(uint48 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)6612_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_struct(RewardSettings)6606_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Claim)6328_storage": {
            "label": "struct IAgentReward.Claim",
            "members": [
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MainReward)6310_storage": {
            "label": "struct IAgentReward.MainReward",
            "members": [
              {
                "label": "blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Reward)6323_storage": {
            "label": "struct IAgentReward.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mainIndex",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contributorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "coreAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RewardSettings)6606_storage": {
            "label": "struct RewardSettingsCheckpoints.RewardSettings",
            "members": [
              {
                "label": "protocolShares",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contributorShares",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "stakerShares",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "parentShares",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "stakeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)275_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ServiceReward)6339_storage": {
            "label": "struct IAgentReward.ServiceReward",
            "members": [
              {
                "label": "impact",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "parentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalClaimedParent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Trace)6595_storage": {
            "label": "struct RewardSettingsCheckpoints.Trace",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)6612_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "015720ed7c598f95c306bb78818450ee164f381da3f0821659643512e4084218": {
      "address": "0xCD999cF022CC640Ad34BA8067896b8a27eA382AE",
      "txHash": "0xc576daa2cb181846206785fc7e6470f0ebe88e192d7a1e3e2a18f5b5c4fec2bb",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_roles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)275_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_nextRewardId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint48",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:24"
          },
          {
            "label": "rewardToken",
            "offset": 6,
            "slot": "1",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:30"
          },
          {
            "label": "agentNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:31"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:32"
          },
          {
            "label": "serviceNft",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:33"
          },
          {
            "label": "_mainRewards",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(MainReward)6310_storage)dyn_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:36"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_array(t_struct(Reward)6323_storage)dyn_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:37"
          },
          {
            "label": "_rewardSettings",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Trace)6595_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:39"
          },
          {
            "label": "protocolRewards",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:42"
          },
          {
            "label": "validatorPoolRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:43"
          },
          {
            "label": "_claimedStakerRewards",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:44"
          },
          {
            "label": "_claimedValidatorRewards",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:46"
          },
          {
            "label": "_serviceRewards",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(ServiceReward)6339_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:48"
          },
          {
            "label": "_rewardImpacts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:49"
          },
          {
            "label": "_validatorRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint48,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:51"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "15",
            "type": "t_bool",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:61"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)6612_storage)dyn_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MainReward)6310_storage)dyn_storage": {
            "label": "struct IAgentReward.MainReward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reward)6323_storage)dyn_storage": {
            "label": "struct IAgentReward.Reward[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IAgentReward.Claim))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint48,t_uint256))": {
            "label": "mapping(address => mapping(uint48 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)275_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reward)6323_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Reward[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Claim)6328_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Claim)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ServiceReward)6339_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.ServiceReward)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint48 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_uint256)": {
            "label": "mapping(uint48 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)6612_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_struct(RewardSettings)6606_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Claim)6328_storage": {
            "label": "struct IAgentReward.Claim",
            "members": [
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MainReward)6310_storage": {
            "label": "struct IAgentReward.MainReward",
            "members": [
              {
                "label": "blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Reward)6323_storage": {
            "label": "struct IAgentReward.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mainIndex",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contributorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "coreAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RewardSettings)6606_storage": {
            "label": "struct RewardSettingsCheckpoints.RewardSettings",
            "members": [
              {
                "label": "protocolShares",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contributorShares",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "stakerShares",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "parentShares",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "stakeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)275_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ServiceReward)6339_storage": {
            "label": "struct IAgentReward.ServiceReward",
            "members": [
              {
                "label": "impact",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "parentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalClaimedParent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Trace)6595_storage": {
            "label": "struct RewardSettingsCheckpoints.Trace",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)6612_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "80a3d37aa4c300fa83267d9bcbcf5f649916f1d164eee58ebfb862b1fa5b4a28": {
      "address": "0xb10e78Aa5629929Db6232Ce4eb614aeF4f954446",
      "txHash": "0x3aca250f0f78c214a623cd9a47d7aff6294567a649cb0daf9a4e4eca0182c3b3",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_roles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)275_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_nextRewardId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint48",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:24"
          },
          {
            "label": "rewardToken",
            "offset": 6,
            "slot": "1",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:30"
          },
          {
            "label": "agentNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:31"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:32"
          },
          {
            "label": "serviceNft",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:33"
          },
          {
            "label": "_mainRewards",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(MainReward)6310_storage)dyn_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:36"
          },
          {
            "label": "_rewards",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_array(t_struct(Reward)6323_storage)dyn_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:37"
          },
          {
            "label": "_rewardSettings",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Trace)6595_storage",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:39"
          },
          {
            "label": "protocolRewards",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:42"
          },
          {
            "label": "validatorPoolRewards",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:43"
          },
          {
            "label": "_claimedStakerRewards",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:44"
          },
          {
            "label": "_claimedValidatorRewards",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:46"
          },
          {
            "label": "_serviceRewards",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(ServiceReward)6339_storage)",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:48"
          },
          {
            "label": "_rewardImpacts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:49"
          },
          {
            "label": "_validatorRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_mapping(t_uint48,t_uint256))",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:51"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "15",
            "type": "t_bool",
            "contract": "AgentReward",
            "src": "contracts/AgentReward.sol:61"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)6612_storage)dyn_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MainReward)6310_storage)dyn_storage": {
            "label": "struct IAgentReward.MainReward[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Reward)6323_storage)dyn_storage": {
            "label": "struct IAgentReward.Reward[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Claim)6328_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IAgentReward.Claim))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint48,t_uint256))": {
            "label": "mapping(address => mapping(uint48 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)275_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Reward)6323_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Reward[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Claim)6328_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.Claim)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ServiceReward)6339_storage)": {
            "label": "mapping(uint256 => struct IAgentReward.ServiceReward)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint48 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint48,t_uint256)": {
            "label": "mapping(uint48 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)6612_storage": {
            "label": "struct RewardSettingsCheckpoints.Checkpoint",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_struct(RewardSettings)6606_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Claim)6328_storage": {
            "label": "struct IAgentReward.Claim",
            "members": [
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MainReward)6310_storage": {
            "label": "struct IAgentReward.MainReward",
            "members": [
              {
                "label": "blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "agentCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Reward)6323_storage": {
            "label": "struct IAgentReward.Reward",
            "members": [
              {
                "label": "id",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mainIndex",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "contributorAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "coreAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RewardSettings)6606_storage": {
            "label": "struct RewardSettingsCheckpoints.RewardSettings",
            "members": [
              {
                "label": "protocolShares",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contributorShares",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "stakerShares",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "parentShares",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "stakeThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)275_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ServiceReward)6339_storage": {
            "label": "struct IAgentReward.ServiceReward",
            "members": [
              {
                "label": "impact",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "parentAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalClaimedParent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Trace)6595_storage": {
            "label": "struct RewardSettingsCheckpoints.Trace",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)6612_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f409413478aa377db6e879e6edf72c7e4836dc112f3ce20922ec03123370037e": {
      "address": "0xcD879fb4Aa20dDE6B8a327EFcbAdF940CB5E42E6",
      "txHash": "0x7c4f0447d5f2dca50912552e1de9c6df9d35f98c5d019a306f9f3640788202a3",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "personaNft",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:22"
          },
          {
            "label": "_contributionVirtualId",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:24"
          },
          {
            "label": "_parents",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:25"
          },
          {
            "label": "_children",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:26"
          },
          {
            "label": "_cores",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint8)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:27"
          },
          {
            "label": "modelContributions",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:29"
          },
          {
            "label": "modelDatasets",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:30"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "ContributionNft",
            "src": "contracts/contribution/ContributionNft.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)307_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)384_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1ada99442e77a9e07bf33386053ccb492c7127b10b63748b52e31a1bfcec7d5c": {
      "address": "0xB488156cA1d605dEF081d326d47aA1bBC152A606",
      "txHash": "0x0ca991ddb429acb29768ba670246bcb6c89629abbb1a7630d9498150491218b1",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:25"
          },
          {
            "label": "personaNft",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:27"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:28"
          },
          {
            "label": "datasetImpactWeight",
            "offset": 20,
            "slot": "2",
            "type": "t_uint16",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:30"
          },
          {
            "label": "_cores",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint8)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:32"
          },
          {
            "label": "_maturities",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:33"
          },
          {
            "label": "_impacts",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:34"
          },
          {
            "label": "_mintedAts",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:35"
          },
          {
            "label": "_coreServices",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:37"
          },
          {
            "label": "_coreDatasets",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_array(t_uint256)dyn_storage))",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)307_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)384_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_mapping(t_uint8,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint8 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e47b694341c08d137cda2fff249767490e4b9f4c3d95c3c04cd0a5171d5e0c08": {
      "address": "0x05b00C357dC36f34F3200D01DacA5cb5B5AaF12A",
      "txHash": "0x8be5f21d789d3731d0ecaa1c47386e4073e5b2aa96fe802a12064024c8b29690",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:25"
          },
          {
            "label": "personaNft",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:27"
          },
          {
            "label": "contributionNft",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:28"
          },
          {
            "label": "datasetImpactWeight",
            "offset": 20,
            "slot": "2",
            "type": "t_uint16",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:30"
          },
          {
            "label": "_cores",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint8)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:32"
          },
          {
            "label": "_maturities",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:33"
          },
          {
            "label": "_impacts",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:34"
          },
          {
            "label": "_mintedAts",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:35"
          },
          {
            "label": "_coreServices",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:37"
          },
          {
            "label": "_coreDatasets",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_array(t_uint256)dyn_storage))",
            "contract": "ServiceNft",
            "src": "contracts/contribution/ServiceNft.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)307_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)384_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_mapping(t_uint8,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint8 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint8 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint8 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_uint256)": {
            "label": "mapping(uint8 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2121aac3901589319423e61e48c38ca0ee66f8bd6046e65c56a2afb856b3a944": {
      "address": "0x6209EADE6E50Cb00dF21afe66401489080F233AF",
      "txHash": "0x41ebbc4ad164a46dfc7bada429a69d17f8f48cc53ba130a214fb31ee4aeb6cc9",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_roles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)275_storage)",
            "contract": "AccessControl",
            "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
          },
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:20"
          },
          {
            "label": "tokenImplementation",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:21"
          },
          {
            "label": "daoImplementation",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:22"
          },
          {
            "label": "nft",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:23"
          },
          {
            "label": "tbaRegistry",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:24"
          },
          {
            "label": "applicationThreshold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:25"
          },
          {
            "label": "allTokens",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:27"
          },
          {
            "label": "allDAOs",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:28"
          },
          {
            "label": "assetToken",
            "offset": 0,
            "slot": "9",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:30"
          },
          {
            "label": "maturityDuration",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:31"
          },
          {
            "label": "_applications",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_struct(Application)2278_storage)",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:65"
          },
          {
            "label": "gov",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:67"
          },
          {
            "label": "_vault",
            "offset": 0,
            "slot": "13",
            "type": "t_address",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:78"
          },
          {
            "label": "locked",
            "offset": 20,
            "slot": "13",
            "type": "t_bool",
            "contract": "AgentFactory",
            "src": "contracts/virtualPersona/AgentFactory.sol:80"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(ApplicationStatus)2249": {
            "label": "enum AgentFactory.ApplicationStatus",
            "members": [
              "Active",
              "Executed",
              "Withdrawn"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)275_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Application)2278_storage)": {
            "label": "mapping(uint256 => struct AgentFactory.Application)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Application)2278_storage": {
            "label": "struct AgentFactory.Application",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "status",
                "type": "t_enum(ApplicationStatus)2249",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "withdrawableAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "cores",
                "type": "t_array(t_uint8)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "proposalEndBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "virtualId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "tbaSalt",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tbaImplementation",
                "type": "t_address",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "daoVotingPeriod",
                "type": "t_uint32",
                "offset": 20,
                "slot": "10"
              },
              {
                "label": "daoThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(RoleData)275_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
